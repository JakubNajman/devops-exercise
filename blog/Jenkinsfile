node{
    def IVER = sh (script: "git rev-parse --short HEAD", returnStdout: true)
    // def dbenv = new ConfigSlurper().parse("")
    environment {
        DATABASE_HOST=credentials('postgresql-service.default.svc.cluster.local')
        DATABASE_NAME=credentials('blog_backend')
        DATABASE_PASSWORD=credentials('blog_backend')
        DATABASE_USERNAME=credentials('blog_backend')
    }
    stage('Clone repository'){
        checkout scm
        sh 'echo Repository cloned'
    }
    stage('Setting environmental variables.'){

    }
    stage('Building app'){
        //app = docker.build("jakubnajman/blog_app","-f blog/Dockerfile .")
        // uzywac docker compose do pusha i pulla
        withEnv(['IVER='+IVER, 'DATABASE_HOST='+DATABASE_HOST, 'DATABASE_NAME='+DATABASE_NAME, 'DATABASE_PASSWORD='+DATABASE_PASSWORD, 'DATABASE_USERNAME='+DATABASE_USERNAME]){
            sh """
                cd blog
                envsubst < docker-compose.yml > docker-composeC.yml
                docker-compose -f docker-composeC.yml build
                docker-compose push blog
                """
        }
        sh 'echo App builded.'
    }
    // stage('Pushing to local registry'){
    //     //docker.withRegistry('http://localhost:55009/') {
    //     //    Date
    //     //    app.push("latest")
    //     //    nie uzywac taga latest (tagow statycznych)
    //     // sh 'docker tag blog_app localhost:55009/blog_app:latest'
    //     // sh 'docker tag blog_app localhost:5000/blog_app:$(git rev-parse --short HEAD)'
    //     // sh 'docker push localhost:55009/blog_app:latest'
    //     sh 'cd blog && export IVER=$(git rev-parse --short HEAD) && envsubst
    // < docker-composeC.yml > docker-compose.yml && docker-compose push blog'
    // }
    // stage('Pulling on Minikube Docker.'){
    //     sh 'minikube ssh'
    //     sh 'doker pull jakubnajman/'
    // }
    stage('Test image'){
        sh 'echo Test passed.'
    }
    stage('Deploying on Kubernetes'){
        sh 'eval $(minikube docker-env)'
        // sh "sed -i 's/latest/$(git rev-parse --short HEAD)/' kube/blogKube.yaml"
        // sh 'export IVER=$(git rev-parse --short HEAD)'
        // sh 'yum install gettext'
        // sh 'docker pull localhost:5000/blog_app:$(git rev-parse --short HEAD)'
        withEnv(['IVER='+IVER, 'DATABASE_HOST='+DATABASE_HOST, 'DATABASE_NAME='+DATABASE_NAME, 'DATABASE_PASSWORD='+DATABASE_PASSWORD, 'DATABASE_USERNAME+'=DATABASE_USERNAME]){
            sh """
                cd blog/kube
                envsubst < blogKube.yaml > blog_changed.yaml
                kubectl apply -f blog_changed.yaml
                """
            sh 'cd blog/kube && kubectl apply -f addit/'
        }
        // sh 'cd blog && kubectl apply -f kube/'
        sh 'echo Deployments and services aplied.'
    }
    // stage('Starting services'){
    //     sh 'minikube service postgresql-service &'
    //     sh 'minikube service blog-service &'
    // }
}
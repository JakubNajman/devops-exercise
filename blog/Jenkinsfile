node{
    stage('Clone repository'){
        checkout scm
        sh 'echo Repository cloned'
    }
    stage('Building app'){
        //app = docker.build("jakubnajman/blog_app","-f blog/Dockerfile .")
        // uzywac docker compose do pusha i pulla
        sh 'docker-compose up --build'
        sh 'echo App builded.'
    }
    stage('Pushing to local registry'){
        //docker.withRegistry('http://localhost:55009/') {
        //    Date 
        //    app.push("latest")
        //    nie uzywac taga latest (tagow statycznych)
        sh 'docker tag blog_app http://localhost:5509/blog_app:latest'
        sh 'docker tag blog_app http://localhost:5509/blog_app:$(git rev-parse --short HEAD)'
        sh 'docker push http://localhost:5509/blog_app:latest'
        sh 'docker push http://localhost:5509/blog_app:$(git rev-parse --short HEAD)'

        }
    }
    // stage('Pulling on Minikube Docker.'){
    //     sh 'minikube ssh'
    //     sh 'doker pull jakubnajman/'
    // }
    stage('Test image'){
        sh 'echo Test passed.'
    }
    stage('Deploying on Kubernetes'){
        sh 'eval $(minikube docker-env)'
        sh "sed -i 's/latest/$(git rev-parse --short HEAD)/' kube/blogKube.yaml"
        sh 'cd blog && kubectl apply -f kube/'
        sh 'echo Deployments and services aplied.'
    }
    // stage('Starting services'){
    //     sh 'minikube service postgresql-service &'
    //     sh 'minikube service blog-service &'
    // }
}
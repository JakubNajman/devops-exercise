version: '3'
services: 
  db:
    image: 'postgres:latest'
    restart: always
    # env_file: blog.env
    environment: 
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_DB=${DATABASE_NAME}

  blog:
    build: 
      context: .
      dockerfile: Dockerfile
    # env_file: blog.env
    ports: 
      - '3000:3000'
    tty: true
    environment: 
      - PGHOST=${DATABASE_HOST}
      - PGUSER=${DATABASE_USERNAME}
      - PGDATABASE=${DATABASE_NAME}
      - PGPASSWORD=${DATABASE_PASSWORD}
    links:
      - redis
      - db
      - reverse-proxy
    labels: 
      - traefik.enable=true
      - traefik.http.routers.blogdash.rule=Host("blog.localhost")
      
  redis:
    image: 'redis:latest'

  reverse-proxy:
    image: traefik:latest
    command: 
      - --api.insecure=true 
      - --providers.docker
      - --api=true
      - --api.dashboard=true
      - --log.level=DEBUG
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels: 
      - traefik.enable=true
      - traefik.docker.network=monitoring
      - traefik.http.routers.traefik-dashboard-http-router.entrypoints=http
      - traefik.http.routers.traefik-dashboard-http-router.rule=Host("dashboard.localhost")
      - traefik.http.routers.traefik-dashboard-http-router=api@internal
  
  
